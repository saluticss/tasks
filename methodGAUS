import numpy as np

# Определение матрицы коэффициентов системы уравнений
A = np.array([[1.24, -0.87, -3.17],
              [2.11, -0.45, 1.44],
              [0.48, 1.25, -0.63]])

# Определение вектора свободных членов
b = np.array([0.46, 1.50, 0.35])

# Расширение матрицы коэффициентов A с вектором свободных членов b
Ab = np.column_stack((A, b))

# Размерность матрицы A
n = len(A)

# Прямой ход метода Гаусса
for i in range(n-1):
    pivot = Ab[i, i]  # Определение ведущего элемента (pivot)
    Ab[i, :] /= pivot  # Нормализация текущей строки
    for j in range(i+1, n):
        factor = Ab[j, i]  # Коэффициент для обнуления элементов ниже ведущей строки
        Ab[j, :] -= factor * Ab[i, :]  # Обнуление элементов ниже ведущей строки

# Обратный ход метода Гаусса
x = np.zeros(n)  # Инициализация вектора решений
x[n-1] = Ab[n-1, n] / Ab[n-1, n-1]  # Вычисление последнего значения решения
for i in range(n-2, -1, -1):
    x[i] = (Ab[i, n] - np.dot(Ab[i, i+1:n], x[i+1:n])) / Ab[i, i]

print("Решение системы:")
for i in range(n):
    print("x{} = {}".format(i+1, x[i]))
